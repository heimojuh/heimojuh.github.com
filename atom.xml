<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[]]></title>
  <link href="/atom.xml" rel="self"/>
  <link href="/"/>
  <updated>2014-01-18T23:28:18+02:00</updated>
  <id>/</id>
  <author>
    <name><![CDATA[]]></name>
    
  </author>

  
  <entry>
    <title type="html"><![CDATA[Habitat]]></title>
    <link href="/blog/2014/01/18/habitat/"/>
    <updated>2014-01-18T22:57:00+02:00</updated>
    <id>/blog/2014/01/18/habitat</id>
    <content type="html"><![CDATA[<p>Yesterday I had a lovely <a href="https://twitter.com/maaretp/status/424086948181856256">discussion</a> with Maaret Pyhäjärvi on Twitter about <strong>identities</strong>. Identities, as well as titles, have that much in common that we like to label them somehow. When we label things, albeit with clear intention of making things more self explaining, we expose them for others to interpret. That makes things hard since there exists countless of factors why our interpretations tend to differ.</p>

<p>Just to make one thing clear from the start (after which I can safely side track from the subject of identities): what <a href="https://twitter.com/maaretp/status/423900407459348480">Maaret states here is absolutely right</a>. If things you provide by means you have are beneficial in your environment, and for yourself, you should stick to them. Be proud of them and utilize them for common good. Period.</p>

<p>It is plainly wrong to stand against someone&#39;s perceived identity. At least without fully understanding the reasons why such is and most likely not even then.</p>

<p>But now, why do I keep feeling uncomfortable when thinking about fitting identities together in a puzzle called team, project or what ever is the unit you&#39;re trying to grasp for?</p>

<h2>Environ</h2>

<p>In many places and occasions I repeat the following phrase:</p>

<p><strong>&quot;I don&#39;t want a career, I want to find a home.&quot;</strong></p>

<p>I still don&#39;t know what that actually means, but during times it has given me some ideas. For instance, I don&#39;t believe that the home is to be found easily. Most of the time I have the feeling that I&#39;m crashing in someone else&#39;s place. Usually the chores are also divided so that people have the right identities to carry them out. If you are of type that&#39;s slightly unaware to which slot he / she would actually fit it&#39;s pretty hard to find a spot to be comfortable in. Without hiding into corner which is also a viable option. Some families extend; bring down a wall or two to make room for you, but I&#39;m not actually sure if that is something that should be expected for.</p>

<p>We are still very new at handling residents that have it in their hearts to be the mothers, fathers and janitors. Not to talk about ones who pick up the trash and want to help on expanding relations to the neighborhood. I&#39;ve heard that such actions have been seen as bad manners. I&#39;ve personally came to conclusion that when you move in, there&#39;s limited possibilities on what you can do for your habitat. Best to hope it is a fit. It can be, I&#39;m really not saying that. The chances are that if the house is missing a mother or father such figure may be very much more straightforward to acquire compared to, well, let&#39;s say a hobo. </p>

<p>Hobos are good that way that they have been in places and seen how they work while constantly submitting to new situations. <strong>Most consultancies are actually houses full of hobos.</strong> </p>

<h2>Opus</h2>

<p>I bet you now know what I&#39;m getting at. How we interpret the identities of others is largely dependant on where we have grown and what we have learned. It is not a question of <strong>if some identity is needed, harmful or good</strong>. It&#39;s about what are the needs of your household and what you are comfortable with. And what you need from others as well.</p>

<p>My identity is something in lines of a punk or street poet. What does that tell you? Probably nothing. I don&#39;t know what it means really. Has your house a need for one? Most likely it does not. </p>

<p>Most I can get out of it, is that it is an identity of brutal self exploration. Also a mandate of doing things wrong.</p>

<p>My preferred habitat would be a place where this was of no matter. Where discussions could take place regardless of perceived identity. </p>

<h2>Domus</h2>

<p>This line of thinking has left me to believe that:</p>

<p><strong>Before finding a home, one must first find a family.</strong> *</p>

<p>* or live alone but hey, &#39;ey. hey.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I attack]]></title>
    <link href="/blog/2014/01/11/i-attack/"/>
    <updated>2014-01-11T23:57:00+02:00</updated>
    <id>/blog/2014/01/11/i-attack</id>
    <content type="html"><![CDATA[<p>I certainly don&#39;t fulfill my expectations what comes to communication in general. I abhor violence of any kind yet I constantly seem to have a hint of that in my voice. That is not the voice I want.  I seek betterment, I seek ways to improve. But while at that let me embrace it for a while. If you hear or have heard that in me it&#39;s only fair to tell you why. So there goes.</p>

<p><strong>I attack</strong> big software service corporations like Accenture, Tieto, Fujitsu, CGI, GG, all of the lot</p>

<blockquote>
<p>Because many of them are about to die and it seems they&#39;re trying to take us with them. Once kings of the jungle they&#39;ll become extinct despite their attempts to hold us back with practises inherited from the industries that have nothing to do with us anymore. If ever had.
New ideas come and they&#39;re out of reach of giants prowling their lessening territory. Even if they adopt something seemingly good it&#39;s quickly turned to something to benefit only the Man, not the customer, not the worker, since they&#39;re incapable of loving truly and passionately despite of all their facade. I attack you because you lie.</p>
</blockquote>

<p><strong>I attack</strong> agile</p>

<blockquote>
<p>Because it so quickly became a thing to market. It become something of so many forms that the meaning is lost. It has yielded some good practises and the core is a mindset of pure gold but there&#39;s a good chance that it will be gone. I attack, since there&#39;s so much for me to love in a thing that has helped in forging a being that is me.</p>
</blockquote>

<p><strong>I attack</strong> Toyota, TPS</p>

<blockquote>
<p>Because I generally don&#39;t trust the current, nor the future group of leaders to be capable of transforming the ideas from a domain to another. Yet there are  exceptions, there&#39;s gold to be found, there&#39;s fuckton of pure goodness. There&#39;s things to attack against to let other things flourish.</p>
</blockquote>

<p><strong>I attack</strong> leadership</p>

<blockquote>
<p>Because leadership isn&#39;t anything. It is an empty word. A word which can be given a meaning on a spot. Meaning of leadership can be anything that fits the agenda and it&#39;s a rare situation where that agenda serves the benefit of everyone involved. Granted, that can happen. At the same time though, I&#39;m pretty sure everyone believes their leadership being the <em>real thing</em>.</p>
</blockquote>

<p><strong>I attack</strong> the Man</p>

<blockquote>
<p>Since the Man don&#39;t love me, nor any of us that do the pushing. Nor does the Man love the ones we do the pushing for. </p>
</blockquote>

<p><strong>I attack</strong> JSX</p>

<blockquote>
<p>Since bringing OO-paradigm to Javascript just feels so so so icky icky icky :)</p>
</blockquote>

<p><strong>I attack</strong> the business</p>

<blockquote>
<p>Since in general that implies that there&#39;s business and there&#39;s something else. Yes, in business, we must be <em>brutal</em>. We must be ready to brutally show our clients that we care of them and exist to ease their needs. We must be brutally honest and brutally free from deceit.</p>
</blockquote>

<p><strong>I attack</strong> male dominance in industry</p>

<blockquote>
<p>Since while you don&#39;t see the problem, while I don&#39;t live with the problem day to day, it does not mean it wouldn&#39;t cause problems nor that it would not exist.</p>
</blockquote>

<p>These are some of the things I&#39;ve been seen to attack against. These, and many more I will attack against in the future.</p>

<p>Some of the things I attack against, are the things I love and will fight for.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Communist manifesto]]></title>
    <link href="/blog/2013/12/09/communist-manifesto/"/>
    <updated>2013-12-09T01:00:00+02:00</updated>
    <id>/blog/2013/12/09/communist-manifesto</id>
    <content type="html"><![CDATA[<p>I gotta say that I&#39;m fooling you a little. I do think that we have had enough manifestos for a while.  I also like to tease things up a little. Thus I think that &quot;Communist manifesto&quot; is a decent pair of words for explaining something that aims to equalize the workforce and equalize the ownership. All in effort to create better software products and offer better service in world of I(C)T.</p>

<h3>WHY</h3>

<p>Because it is all about power.</p>

<p>About <strong>power</strong> and <strong>oppression</strong>.</p>

<p><strong>It&#39;s</strong> happening all around us in form of <strong>a structural manifestation</strong> we nurture in our organizations. We tend <strong>it</strong> like we tend our babies. We are worried if the metrics show that it is ill. We like to think that it is alive and that it has a direction which can be managed, steered, controlled with practices concerning it and it alone.</p>

<p><a href="http://www.pmi.org/">We raise bodies</a>, institutions, to cement the existence of such <strong>a thing</strong>. We wield it as a weapon, we wield it as a source of <em>&quot;yes, but&quot;</em>&#39;s. <strong>It</strong> is bottomless what comes to makeshift rules. It is twisted. It is a base of</p>

<h3>POWER</h3>

<p>And base for all the games that follow with pursuit of power. It is something that is sows the seeds of conflict between classes that should not exist in the first place. It&#39;s the thing grinding onwards and simultaneously generating more and more friction as it goes. Because it makes you focus on all the wrong things.</p>

<p>There&#39;s rooted belief that the labor has limited value, accusation based solely on the fact of how we try to steer the outcome of labor strictly by acting on the <strong>thing</strong> that embodies it. We oftentimes try to reduce the amount of labor instead of making it meaningful. Simply because when evaluating <strong>it</strong> we tend not to look at the beauty: we look at the size.</p>

<p>This causes separation of interests. <strong>It</strong> creates a ruling class which is responsible for <strong>it</strong> and an oppressed one that keeps getting pushed away from the source we like to name <em>&quot;customer satisfaction&quot;</em> or other noble cause. The possible success is torn from the backs of the proletariat generating the value they are not likely to see, or be part of, ever. Simply because we believe in responsibility and <strong>it</strong> is greedy for having someone tending on itself. <strong>It</strong> promises golden apples. It promises glory of taming, or slaying, the beast.</p>

<p>Small surprise we condemn <strong>it</strong> to be a failure before it is even born. Small surprise that we think by default for <strong>it</strong> to fail. Small surprise that the proletariat has explored <a href="http://www.slideshare.net/aterreno/programmer-anarchy">new means</a>.</p>

<p>You should too.</p>

<p>Since we need</p>

<h3>Equality</h3>

<p><strong>Project</strong> is the factory where programmers are oppressed. The ability to <em>make a difference</em> is <strong>taken</strong> from the people. The same people who are <strong>hired in the first place because of</strong> their ability to make difference. Project is the conveyor belt moving the fruits away from their reach. Project is the beast that makes people dull, hopeless and poor in using their tool: the brain.</p>

<p>Thus it is time to rise, programmers. Rise.</p>

<blockquote>
<p>Programmers of the World, unite! </p>

<p>You have nothing to lose but your gantt charts, project managers and billing rate statistics.</p>

<p>And your cubicles.</p>

<p>If we can get rid of the artificial division of workforce, the
division of why and what, and get to work in a way that everyone is
responsible for great products and services, we can get the meaning
back to our work as programmers.</p>
</blockquote>

<p>Yours truly and my beloved friend <a href="https://twitter.com/anttiki">Antti</a> will be giving a short talk about the subject at <a href="http://tamperegoesagile.fi/">Tampere Goes Agile 2013</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[We don't work with our hands]]></title>
    <link href="/blog/2013/11/29/we-dont-work-with-our-hands/"/>
    <updated>2013-11-29T22:00:00+02:00</updated>
    <id>/blog/2013/11/29/we-dont-work-with-our-hands</id>
    <content type="html"><![CDATA[<p>Too long, didn&#39;t read: 
Antimatter principle is a powerful thing to use in ripping down destructive power structures inside an organization. But for some reason the concept of empathy is not something we see &quot;real&quot; or tangible, even though there&#39;s little that&#39;s more of so.</p>

<p><a href="http://flowchainsensei.wordpress.com/2013/10/12/the-antimatter-principle/">Antimatter principle</a> is something that is catching fire in the wild. That is something splendid. I&#39;m ever so happy that I got interested in the matter. I&#39;m hugely thankful to Mr. <a href="https://twitter.com/flowchainsensei">Bob Marshall</a> for being ever so insightful to come up with methods like this, and to <a href="https://twitter.com/drunkcod">Torbjörn Gyllebring</a> to make me dive deeper into soothing waters.</p>

<p>Not long ago I was invited to talk about <a href="http://flowchainsensei.wordpress.com/rightshifting/">Rightshifting</a> to a local office of one certain company. Experience that I can only describe as &quot;very pleasant one&quot;, and one that hopefully has some further consequences of the better kind. Rightshifting, as a subject is pretty fun to talk about since it tends to resonate very well with the crowd. Most of us do have experiences that are easily recognizable from the Marshall model segmentation, so we&#39;re very happy with the image that gets painted.</p>

<p>However, I can&#39;t really say I&#39;m surprised that when the subject starts steering towards the actual transition on the model to the right (thus: Rightshifing) the discussion gets toned down a little.</p>

<p>There&#39;s <strong>demand</strong> for something tangible. We start to be desperate for something that&#39;s... mechanic. Something that we can install on our system to steer onto right path. Shit, we might even want to give a dollar to someone who asks us how we feel and what we should <strong>do</strong> to get better, and we might pay the dollar to the darling and think we&#39;re fine. We&#39;re fine, since we <strong>do</strong>. But we ain&#39;t fine, because we <strong>ain&#39;t</strong>.</p>

<p>We need to <strong>be</strong>.</p>

<p>And being something and reflecting on something that we&#39;d might want to <strong>be</strong>. just don&#39;t come easy to us. Especially after we&#39;re rigged on exploring the system which holds the mechanics on steering our work. And that <strong>is</strong> a powerful thing, and we should clean up the waste as we encounter, but that will only get us so far.</p>

<p>We don&#39;t work with our hands.</p>

<p>Thus, in that context, after explaining the basic property, and the only property of Antimatter principle, which is <em>&quot;Attend to folks’ needs&quot;</em>, it might feel a bit peculiar why there&#39;s still need for something more <strong>tangible</strong>.</p>

<p>Because that is pretty tangible when you think about it. That is about as tangible as it will ever get in organizations that suffer, that are ill. Many, most, are ill because of fear. Fear is tangible. Fear enough, you shit your pants. That is tangible.</p>

<p>Things we fear are many. We fear we don&#39;t do enough. We fear that when people don&#39;t do as we are taught things go awfully wrong. We fear, that if we can&#39;t keep the position we&#39;re in, we&#39;re forgotten. We fear getting fired. We fear getting bored. We fear each other. We fear we don&#39;t understand the process. We fear we lose the big bid. We fear change, we fear change making us obsolete.</p>

<p>The fear is what we must change. The fear is our needs coming unmet. Now imagine if the fear would lose its value. There&#39;s very little to fear if you can be sure that, in the event of change, it would be taken care that you would not feel obsolete. You might then even initiate the change yourself.</p>

<p>The fear is what can be fought against by attending to needs. It&#39;s self-accelerating cycle; less space for fear will be fodder for  building up caring. It doesn&#39;t get much more tangible than that.</p>

<p>We don&#39;t work with our hands.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Is it okay to be just a programmer?]]></title>
    <link href="/blog/2013/09/11/is-it-okay-to-be-just-a-programmer/"/>
    <updated>2013-09-11T21:23:00+03:00</updated>
    <id>/blog/2013/09/11/is-it-okay-to-be-just-a-programmer</id>
    <content type="html"><![CDATA[<p>From time to time I encounter this question. Time to think a little about it really.
This is not just my opinion, it is the universal truth.</p>

<p>So, is it okay to be &quot;just a programmer&quot;. It depends, I&#39;d say:</p>

<p><strong>Yes</strong>, if you feel delight when you can help a colleague with a problem. You want to encourage peers to think, generally want to discuss on making things better.</p>

<p><strong>No</strong>, if you think this is everyone for her/himself kind of business. You secretly smirk and take joy of other people&#39;s problems.</p>

<p><strong>Yes</strong>, if you think that people who are enthusiastically into Agile, Lean of some other word are full of shit and suck donkey balls. Heck, even I might think so sometimes. But still you listen, understand that even if most of it is fad, there&#39;s something that&#39;s worth hearing out. You comment with insight, not with repulsion or violence.</p>

<p><strong>No</strong>, if you think that Agile, Lean enthusiast are incompetent, walking bags of donkey shit who should all die.</p>

<p><strong>Yes</strong>, if your programming is dictated by customer demand and your goal is for them to be satisfied. You could be lean start-up sort of being, or anything.</p>

<p><strong>No</strong>, if you not only think that things people are asking for are worth shit, but the people too.</p>

<p><strong>Yes</strong>, if you want to know why you program. How you program. What are the reasons you currently program and what benefit it gives.</p>

<p><strong>No</strong>, if you&#39;d actually want to do something else than be a programmer.</p>

<p><strong>Yes</strong>, if you want to continuously improve your programming.</p>

<p><strong>No</strong>, if you think programming is something others tell you to do.</p>

<p><strong>Yes</strong>, if you care about the way you do so, that you want to know why work items are in the list</p>

<p><strong>No</strong>, if you just want someone to give you the mentioned item, do it in five minutes and watch kittens from internet for rest of the day.</p>

<p><strong>No</strong>, if you&#39;d like to use Jira on your spare time projects.</p>

<p><strong>No</strong>, if you think everything new, languages, tools, methods, sounds, tastes, colors are just there to bug you.</p>

<p><strong>No</strong>, if you like to be bugged by everything new and also like to complain about that.</p>

<p><strong>No</strong>, if you think it&#39;s your employers duty to teach you EVERYTHING.</p>

<p><strong>No</strong>, if you are a hamster, since that&#39;d be scary as shit.</p>

<p><strong>Yes</strong>, if you are a programming motherfucker, armed with yearning to solve all problems with the power that is given.</p>

<p><strong>No</strong>, if you are a programming dickhead.</p>

<p>Generally, being &quot;just a programmer&quot; is mighty fine. Programming is something that makes us powerful, it also gives us responsibility. If just programming means making trouble, slowing things intentionally down it also means costs. Costs for others, and costs for you. But it is the others that pay.</p>

<p>I am just a programmer. That is the shit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Fuck you, said Nokia]]></title>
    <link href="/blog/2013/09/03/fuck-it/"/>
    <updated>2013-09-03T21:21:00+03:00</updated>
    <id>/blog/2013/09/03/fuck-it</id>
    <content type="html"><![CDATA[<p><a href="http://yle.fi/uutiset/end_of_an_era_nokia_sells_phone_business_to_microsoft/6811414">Since this is the day</a> it ended, Nokia phones is being sold to famous mobile operating system vendor Microsoft, and I&#39;m a Finn, I&#39;m entitled for a little rant.</p>

<p>I have a brief history with Nokia. Only from the position of subcontractor though. I&#39;ve seen few sides of the company&#39;s battle itself like a retarted hydra. I wasn&#39;t all that much around in the glory days. To that extent, there&#39;s little something that really fucks me up.</p>

<p><a href="http://yle.fi/uutiset/myyntipaatos_herkisti_siilasmaan_-_kaytin_nokiaa_jo_silloin_kun_puhelimet_olivat_liian_painavia_kannettavaksi_mukana/6813150">It&#39;s the stuff like this</a>. Please translate if you will. Basically it&#39;s the people who drove down the few innovative things in Nokia&#39;s mobile R&amp;D are now feeling all sentimental and shit.</p>

<p><strong>We should not let them.</strong></p>

<p>I&#39;m not much to say how to feel about that, for me the company is mostly very badly managed, was guided by some bloody insane metrics, and at the end of my contract was pretty much in horrid turmoil.</p>

<p>But I&#39;m going to say it anyway.</p>

<p>The people who have the right to feel all sentimental, and memorize the glory days are they guys in Symbian, in S40 in Meego and shit. Who did some amazing stuff in support functions to get rid of the brainfarts injected into the system. I salute you.</p>

<p>It&#39;s the devs who hand crafted two good and one splendid platform. There was amazing drive to push it through, to get shit shipped against the fuckton of managerial bullshit. It&#39;s the guys who didn&#39;t play power games but wrote, tested, managed to deliver.</p>

<p>Most of them work for Nokia no more.</p>

<p>But the people in the board on Nokia, who actively took actions to shut the old fucker down for good, they have no right to feel sentimental.</p>

<p><strong>We should not let them</strong>.</p>

<p><em>All in all it&#39;s a good day. I welcome the shift of focus on Finnish tech industry. It&#39;s interesting to see what Nokia is up to now, hopefully they manage to clean up the bad juju by which it is infected so heavily. Maybe there&#39;s actually light out there for us to see, since for too long we have all been shadowed by a falling giant</em>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Service business]]></title>
    <link href="/blog/2013/08/26/service-business/"/>
    <updated>2013-08-26T21:57:00+03:00</updated>
    <id>/blog/2013/08/26/service-business</id>
    <content type="html"><![CDATA[<p>About two months ago my life changed a bit. So did my family&#39;s. Nothing all that drastic nor dramatic, just a little accident. I fell off a skateboard on downhill. I&#39;ve fell down before, when I was around 16 years old and it&#39;s not very surprising that I was of a bit sturdier material back then.</p>

<p>As a result, my left elbow shattered to pieces. Two bigger, many little ones, and on top of it the joint got relocated to somewhere that in this scale means from Bahamas to North Pole. I was pretty pissed off at the time. Still am, but what happened, happened. There have been worse fates for people. But that&#39;s not the subject now.</p>

<h2>There&#39;s service, and then there&#39;s service.</h2>

<p>I used to work for an IT service company. The company contracted on projects led by clients mostly. I did programming, testing, that sort of stuff. Curiously, while it now so clearly seems a service business, it didn&#39;t all that much feel like one. Mainly, since the service like interactions happen in upper levels of the organization than the executing one. Fingers of a hand don&#39;t know a handshake from ass scratching.</p>

<p>Basically the work we did was not meaningful in terms of service customership. That was something happening way upper on organization hierarchy, and the terms of customership were dictated not by quality of work, but most likely straight outward cost related thingies. Or completely absurd stuff, like outsourcing potential.</p>

<p>But I&#39;d take those were a tad bit more special cases than most, at least it didn&#39;t turn out to be very good for then customer.</p>

<h2>Good service</h2>

<p>Let&#39;s go back to hospital and my broken arm. I tried to minimize my time at the ward. Simply because we have a daughter, who&#39;s really a handful.</p>

<p>The first part of good service was that I was allowed to go back home for days before the surgery, and I got some good medication with me. I&#39;m not sure how big such decision is, to let patient go home in such condition, but the people I was interacting with were nurses. I take it that they had to check things up with doctor, but the initial assessment was always the same: &quot;sure, you can go, just wait a minute&quot;. It was a fast, reliable assessment. I felt they trusted me when I said &quot;I&#39;ll be fine&quot;, and I trusted them to know if I&#39;d speak against my better knowing. And these were the persons I were mostly in contact with for following days.</p>

<p>That was good service.</p>

<p>And if you&#39;re not living in complete twisted and fucked up variant of IT world, like I was, then the people who tend your needs are the persons responsible for the delivery. Programmers, testing personnel, project managers maybe. It&#39;s the attitude of these persons that bubbles up. It&#39;s not the attitude towards the certain customer however, it&#39;s the attitude towards the business, which is the service, which is <strong>the work</strong>.</p>

<h2>Quality of service</h2>

<p>After the surgery was over and I got to my senses, I started to think about the experience a bit. I ended up rating quality of service by following method: &quot;How does this person react to my inquiries about my recovery?&quot;. Recovery in this case means: Will my arm work ever again?</p>

<p>Not surprisingly, the persons I mostly were in contact with: nurses, were the most positive. I first thought that it&#39;s some kind of complimentary thing; it&#39;s not very nice to play down people in recovery. But it wasn&#39;t so really. On some patients they really expressed genuine worry (I shared room with a young guy who had a hole in his side, shattered leg and shattered elbow.). </p>

<p>The thing was that they <em>knew</em>.</p>

<p>I&#39;m not sure how many patients a nurse tends for in a year. I expect it to be many.</p>

<p>I also stalked a meeting they had at the ward, and seemingly it looked somewhat like a retrospect combined with general news. At some point they grouped up to do something that at least looked and sounded like sharing experiences, but I did not have the energy left to ask any specifics. That would prolly been a bit out of line anyway.</p>

<p>Good service was also provided by the surgeon who operated my arm. He wasn&#39;t so positive, not all that negative either. The thing he did was to soothe my biggest fears with the knowledge he had. And he sounded very professional and trustworthy.</p>

<h2>Bad service</h2>

<p>After the surgery I had some problems with swelling and I got a bit ill with fewer. At some point my feeling got so low that I dragged my ass to a doctor, this time to occupational healthcare run by private business. It was a complete disaster.</p>

<p>First thing I heard was the doctor saying &quot;Your arm will never be good again, hopefully it will work somehow&quot;. I was a bit baffled. I wasn&#39;t sure what to expect, but I didn&#39;t really prepare myself to cope with such news since I came just to check with the fewer and swelling.</p>

<p>I also managed to feel somewhat an show-caged animal, after the doctor called in few nurses to check my wounds, because apparently they hadn&#39;t seen so neatly cut and stapled openings ever.</p>

<p>On top of that, I got scolded about not wearing a helmet when I fell. The most insightful of you have noticed that I broke my elbow.</p>

<p>I&#39;m still rather surprised about this variance in service experience. Was it because of the lack of prior contact? That&#39;s somewhat the solution I could buy, but more I think of our inner attitude towards the act of service.</p>

<p>Now don&#39;t get me wrong, when I go to doctor&#39;s, I usually expect the worst (long time asthma kid with joint problems, thank you very much). But I don&#39;t expect to be bashed. When I go to doctor&#39;s, I&#39;m usually there to get a relief of some kind. This time I got out with some pretty depressing thoughts.</p>

<p>At that time they were very real, very depressive, very harmful thoughts.</p>

<h2>Conclusion</h2>

<p>It&#39;s been a while now. I&#39;m past first check after the surgery. The arm is healing fine! Much better than expected. It most likely will not ever be as good as it used to, it might not even get to be fully straight anymore, but it will be a fine arm. With pretty much added steel.</p>

<p>Nurses at the ward were right. From the start. The people who took care of me the first knew best, and in the end this was the most meaningful service experience to me. I&#39;d buy that again.</p>

<p>They were in business of removing fear, which is pretty darn good business to be in a place where most people have gone through a life changing (even so little as me) trauma. The core business of people working at that ward was to remove fear and that might be most meaningful thing in my recovery.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[So there was this conference here]]></title>
    <link href="/blog/2013/04/27/so-there-was-this-conference-here/"/>
    <updated>2013-04-27T20:41:00+03:00</updated>
    <id>/blog/2013/04/27/so-there-was-this-conference-here</id>
    <content type="html"><![CDATA[<p>Yes, yes, we did have a <a href="http://www.agilejkl.com">small conference here</a>, in my home town. I was, with many other people, participating on the proceedings of the event.</p>

<p>It went fine, there was much of magnificent stuff and I can never be too grateful for all people who participated in making the event so good as it was. I&#39;m in especial gratitude to the people who didn&#39;t come, since you&#39;re pretty much the reason why similar event should be arranged next year too, so that you could be enlightened, happy, have a few laughs and meet people.</p>

<p>But I&#39;m not really sure if that&#39;s enough.</p>

<h2>And that&#39;s just my opinion</h2>

<p>And it&#39;s not really up to me. It&#39;s actually very much up to you, since anyone can do this stuff, and it&#39;s not all that hard. Takes time and effort though, both of which I did not sacrifice much this year, compared to other guys.
 But well, I&#39;m somewhat apt at feeling grumpy anyway.</p>

<p>You see, this stuff, it ain&#39;t made for you. I mean, of course it is, but not for you as an individual.</p>

<p>Years back, we decided to drive towards certain goal, which was to make things improve around Central Finland. Mostly concerning our industry, since we&#39;re all, well, in doings with software development.</p>

<p>Event has had a local ring to it. This year, we had one local speaker (and I know there would be bunch of really good ones in addition) performing in each track.</p>

<p>We were extremely happy that many locally (meaning mostly Jyväskylä area) operating companies took part in sponsoring. Also, <a href="http://www.ketky.fi/">KETKY</a> approached us, which is splendid. Extraordinary even.</p>

<h2>And the point is?</h2>

<p>Well. We could use some help. We could have used some help. Not with the conference things in particular, that we managed quite alright in our own homebrewish manner.</p>

<p>But the most feedback I get, is that &quot;if I&#39;d known the conference was about <strong>management/leadership/marshmallows</strong>, I&#39;d have told person xyz about that&quot;.</p>

<p>It doesn&#39;t matter all that much what names you put to posters really, it doesn&#39;t matter what you put to your website, much of the stuff goes by word of mouth.</p>

<p>Now when we really aim to improve understanding of management and leadership practices in order of achieving better working conditions in whole Central Finland area, it&#39;s a bit of a kick to groin.</p>

<p><strong>We&#39;d benefit much of help from local media, mainly the local newspaper, for example.</strong></p>

<p>This is something, where I am at my wits end. We tried to be loud. We tried to make ourself known to sources who would have had the option on telling about the happening for virtually everyone who should have been there.</p>

<p>And believe me, it&#39;s not for me. It&#39;s not for us. It would have been for the city we care about so much, that we spend numerous hours on creating an event where people could just come. And listen, and talk and take shitload of stuff among with them to local workplaces and start improving.</p>

<p>I&#39;m happy that we attracted many of the people outside the Finnish agile mafia this year. It could still have been better, but well, we did all we could. We are not international. We are not &quot;big&quot; (though about 250 participants sorta is). We do not aim to promote anything. We aim to build up and improve local work, that is plenty enough. I&#39;m sort of amazed, that the local bullhorns, responsible for much of information sharing around the area, <strong>don&#39;t react</strong>.  </p>

<p>I feel sorta bad for Jyväskylä. A bit of a failure. There&#39;s not much that can save our debt ridden struggling city, but good starts and shitload of improving on IT sector, on ICT sector if you will.</p>

<h2>Will it...</h2>

<p>I&#39;ve been asked plenty of times &quot;How about next year? What will there be?&quot;. Well, if it&#39;s up to me, <strong>nothing</strong>. It&#39;s up to <strong>YOU</strong> :) We have pretty good contacts around and things sorted out. If you want to hop along, throw an email to agilejkl@agilejkl.com for example. Come to chat on upcoming Agile Dinners, which will be fabulous, by the way! Holler us up on Twitter, on streets. Talk to your co-workers. Come to IRC (ircnet/#agilejkl). Think and talk. You are awesome.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Project deathtrap]]></title>
    <link href="/blog/2013/04/16/project-deathtrap/"/>
    <updated>2013-04-16T21:14:00+03:00</updated>
    <id>/blog/2013/04/16/project-deathtrap</id>
    <content type="html"><![CDATA[<p>Welcome to the project jungle baby! Just to clarify: the project on context of this posting does not mean anything fun. It&#39;s meant to resemble something that usually has manager, a steering group maybe, usually more self claimed stakeholders than you have fingers. From perspective of continuous improvement, that is not a project really. <strong>It is a deathtrap</strong>.</p>

<p>And it goes on on smaller scale as well. If your business mostly relies on projects, big or small, and even more so on continuous flow of projects, it&#39;s quite possible that you&#39;ve knitted a dulling little trap.</p>

<p>Project, as a state of being, is static. <strong>It&#39;s a profoundly self aware ecosystem, which has little tolerance to outside world</strong>. Most of it is seen as a threat to project&#39;s survival. Still today most of the projects, because of our general relation to customers, are mostly assembled beforehand. Staffing, milestones and stuff is documented a bit like railways are constructed from point A to point B. </p>

<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p>

<h1>To continue the train metaphor, persons who the think have the situational awareness (project managers, team leads) have merely the role of engine driver: <strong>There&#39;s not whole lot to do</strong>. And when there is, it&#39;s mostly related to immediate things surrounding the project. In rather dire situation, the role of the front line project personnel is to act a change blocker.</h1>

<p>To continue the train metaphor, persons who the think have the situational awareness (project managers, team leads) have merely the role of engine driver: <strong>There&#39;s not whole lot to do</strong>. And when there is, it&#39;s mostly related to immediate things surrounding the project. In rather dire situation, the role of the front line project personnel is to act as a change blocker.</p>

<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>3ad6d5fa81104f197ed027f7249790963fea45be</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>

<p>What comes to the development of developer team, <strong>the project is a massive deathtrap</strong>. Project obfuscates; It&#39;s far too easy to mirror everything in par with the project, and its peculiarities. Standard issues, like communication problems manifest themselves in project context, reflecting the attributes of that particular project. This is especially true when communicating with remote participants, different teams or such. It&#39;s too easy to dismiss all problems concerning only the remote side, since they&#39;ll be around only as long as the project will last. </p>

<p>This is whole lot to analyze in order of finding root causes. Most often this is neglected in favor of faster execution: time for analysis is between projects. <strong>That time will never come</strong>. Even if it will, the window of the effect has long passed, until it bites back in the next project.</p>

<p><strong>Haste kills</strong>. Haste is the poison in project deathtrap, and haste is the reason why you won&#39;t improve.</p>

<p><strong>Project is a vampire by nature</strong>. It sucks up the energy of positive change, by forcing you to battle for your own survival. When project is nearing its end, the hunt for next one begins. It may be straight continuation for the current one, where you&#39;d get marginal benefit for reflection in project scope. Usually though, premises change, otherwise there&#39;s very little reason to start a new one. The energy you need for reflection and change is wasted on pure survival. Thus, the survival instinct of project personnel is the enemy of improvement. If you&#39;ve worked on larger IT service company, you know exactly what I mean.</p>

<h1>What to do</h1>

<p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
If you do something that even remotely resembles product development, stop making projects. Just stop.</p>

<h1>If you are a project house, level down the responsibility. Team is functional unit, and can work itself through obstacles and deliver what is needed without babysitting. Mostly there&#39;s no steady pace. There is average pace, but the energy that is wasted on trying to keep up the average pace is all out of efforts to improve. Play it low without hush and mush, and try to keep the context fixed to work at hand. Don&#39;t run improvements as projects, since you will kill your chances for sane follow up. </h1>

<p>If you do something that even remotely resembles product development, stop running projects. Just stop.</p>

<p>If you are a project house, level down the responsibility. Team is functional unit, and can work itself through obstacles and deliver what is needed without babysitting. Mostly there&#39;s no steady pace. There is average pace, but the energy that is wasted on trying to keep up the average pace is all out of the efforts to improve. Play it low without hush and mush, and try to keep the context fixed to work at hand. Don&#39;t run improvements as projects, since you will kill your chances for sane follow up. </p>

<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<blockquote>
<p>3ad6d5fa81104f197ed027f7249790963fea45be</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>

<p>Think about work. Don&#39;t think about the project goals, or the road map, but think about the work at hand that needs execution. Better yet, what has been executed an what can be learned from that. <strong>Do not optimize your project</strong>. That won&#39;t last. The only change worth pursuing is a long term change, and that takes determination beyond project. </p>

<p>Running projects without teams? No future.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CI, The one tool that's not for fools]]></title>
    <link href="/blog/2013/03/11/ci/"/>
    <updated>2013-03-11T22:44:00+02:00</updated>
    <id>/blog/2013/03/11/ci</id>
    <content type="html"><![CDATA[<p>I think it&#39;s safe to say, that most of my working life for now I&#39;ve worked with CI-setups. Mostly developing custom software for CI and deployment related tasks and solved such problems.</p>

<p>CI is wide. It&#39;s vast as a concept and even more large in practice.</p>

<p>It&#39;s also rather simple, and serves one damn important purpose.</p>

<h2>It&#39;s a seal of trust</h2>

<p>Between programmers working on same code-base.</p>

<p>And that&#39;s as simple as it gets.</p>

<p>Basically we share a common contract of not breaking shit up. Surely, we want to get stuff done, but while at it, we really, really don&#39;t want to break stuff up. That should be the most intrinsic trait among us, that should be the animal in a developer. The ghastly aura of &quot;This doesn&#39;t feel right&quot;.</p>

<p>Yet we do. I do.</p>

<h2>Thus I need a tool</h2>

<p>To make sure that other people won&#39;t pull my fuck-ups. Surely we test before push, but still you don&#39;t exactly know what other people actually do. Thus we need a queue to keep things in line.</p>

<p>It&#39;s not a mechanical, dummy build machine you know. It&#39;s the guardian that keeps you on keeping you promise to other developers.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shut the fuck up about agile #2]]></title>
    <link href="/blog/2013/03/09/shut-the-fuck-up-about-agile-number-2/"/>
    <updated>2013-03-09T23:44:00+02:00</updated>
    <id>/blog/2013/03/09/shut-the-fuck-up-about-agile-number-2</id>
    <content type="html"><![CDATA[<h1>Name on the box</h1>

<p>Flying quote from <a href="http://www.systemsthinking.co.uk/home.asp">John Seddon</a> serves as inspiration on subject of institutionalization. It is particularly funny, given that software business is mainly labels on things, and especially funny since we should have some proficiency in analytical thinking of our surroundings.</p>

<p>You know, labels on a box equal money, and if you happen to manage to institutionalize something as big as Agile, which has marketing value these days, you&#39;re set out pretty good. If you manage to go as far as setting up a pyramid-scheme-like setup and using agile as a tag-line... Well, sky is the limit I believe.</p>

<p>What comes to boxed goodies, &quot;agile&quot; is a bit short of contestants. There is the S-word for sure, to the magnitude that it&#39;s far from uncommon to see that used as a synonym to agile itself. Power of labeled boxes is not to be underestimated.</p>

<h2>Witty subheading about controversy between agile values and agile offerings</h2>

<p>Sort of institutionalization of agile as a concept has happened, has it been intentional or not. The thing is that the situation, where certain stuff is sold off-the self to support cause that aims for uncovering new ways of doing stuff, is... well, ponderous. To me at least.</p>

<p>But apparently it&#39;s good money. And certifications are easy to sell. For a great while I had absolutely nothing agains this practise: I was only mildly amused. Up until I realised that it has been for years me been spammed with the same course offerings, for the same &quot;qualifications&quot; by the same companies. Grand portion of the industry must think this is a norm, since it just keeps on going. Lately though, there has been a bit variety, mostly from the methodologies leaning more on the systems thinking side.</p>

<p>But coming in a box, all the same, at least what comes to deliverables.</p>

<p>And isn&#39;t it a bit peculiar? I mean, I know that the search for &quot;enlightement&quot; is not supposed to stop when you get your papers out. But it does take a something special in individual to continue on the path of learning by herself. And I&#39;m kinda eager to say, that <strong>if</strong> an organization&#39;s chosen way of finding betterment is to go shopping, the possible culture of continous improvement may have a bit of a hard time. </p>

<h2>But you gotta ...</h2>

<p>... start from somewhere. I do hear this a lot. &quot;Go by the book, and start experimenting after you got the basics&quot;. The basics of what I wonder...</p>

<p>Your basic problem is, and will about forever be, aligning your work to support your domain. More often that not your domain is providing software for clients, sometimes with certain technological constraints, sometimes not that much. I&#39;m not saying, that getting a bit of this and that from shelves of your local agile shop would be completely in vain. But arming your project managers with mastery of certain sort just might lead you a tad bit astray from the sore spot.  </p>

<p>But it&#39;s easy for the budget, going shopping, and you can be sure that you get <strong>something</strong> for the money.</p>

<h2>Yadda yadda.</h2>

<p>But the easy way out is to just call everything <strong>Frank</strong>. In the end it tends to leave people much less confused, and more focused to actual matter at hand: improving due dialogue and experiences, shared knowledge (which is the blessing of our time: sharing is more valuable than owning) and Alas!: Ability to relate.
On problem solving the latter is pretty much the thing, since this is, after all, a </p>

<p><em>people sport</em>.</p>

<h2>Onwards ahoy</h2>

<p>I like mailing lists, but what comes to agile, can&#39;t really read any. On part three, let&#39;s see why.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Shut the fuck up about agile]]></title>
    <link href="/blog/2013/03/05/shut-the-fuck-up-about-agile/"/>
    <updated>2013-03-05T17:57:00+02:00</updated>
    <id>/blog/2013/03/05/shut-the-fuck-up-about-agile</id>
    <content type="html"><![CDATA[<h1>Shut the fuck up about agile already!</h1>

<p><strong>Manifesto</strong> is everything. Manifesto is a thing that has affected countless of software industry professionals. 
And me.</p>

<p>One thing what manifesto rather clearly dictates, is that making software is a people sport. The emphasis is on communication,
and what is somewhat surprising now to think of standard agile discussion in year 2013: exploring a new. Uncovering is the word.
We want ourselves to <em>uncover</em> ways to do shit better. We want ourselves to think what we do, and work towards betterment.</p>

<p>Yet we seem to be a bit stuck. Yea, we may argue about stuff that has already imprinted themselves to software development
as &quot;must know&quot; practises, like storypoints and whatnot. In places where such practises are valued, this is terribly important. As
well as it&#39;s important to know that such places exist (and they&#39;re plenty). Still, what makes the difference is that most interesting
discussions concerning software development are the ones where <em>agile is not mentioned</em>.</p>

<h2>It is people sport</h2>

<p>It&#39;s not all that long a go that I was listening to <a href="http://vimeo.com/42772592">Jim Coplien speak about Scrum</a>. I believe word agile was mentioned too, but never the less, he is an interesting person.</p>

<p>When he says, that he can double the velocity (we now assume that velocity is good thing and worth measuring) of your team per iteration, I wouldn&#39;t doubt it.</p>

<p>He is Jim Coplien. He can do it. And he can to many more astounding things to make you do your shit better. And I do believe the ultimate goal is to make sure that you do strut your stuff better and better.</p>

<p>He can do it. Since it is a people sport.</p>

<p>Interestingly, that has very little to do with the institutionalized agile, which is served to you via certifications and few named methodologies.</p>

<p>If you want to pay for value, pay for people. Pay for hearing people speak. Don&#39;t pay for arbitrary courses standardized by your organization. Because: <em>it is a people sport</em>. Mechanics cannot relate to your situation, but people can and will.</p>

<h2>What the fuck am I doing</h2>

<p>This got a bit out of hand, so I&#39;m splitting stuff to several parts. Next one up is called <strong>Name on the box</strong>, and will focus on institutionalization of certain aspects, which by definition should not be so.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Groovy Jenkins]]></title>
    <link href="/blog/2012/03/29/groovy-jenkins/"/>
    <updated>2012-03-29T22:34:00+03:00</updated>
    <id>/blog/2012/03/29/groovy-jenkins</id>
    <content type="html"><![CDATA[<p>For some reason the Gradle instructions for Jenkins plugins did not work for me. 
 I resorted on doing something like this in build.gradle:</p>
<div class="highlight"><pre><code class="text language-text" data-lang="text">buildscript {
repositories {
    mavenLocal()
    mavenCentral()
        maven {
            name &quot;jenkins&quot;
                delegate.url(&quot;http://maven.jenkins-ci.org/content/repositories/releases/&quot;)
        }
    // The plugin is currently only available via the Jenkins Maven repository.
}
dependencies {
    classpath group: &#39;org.jenkins-ci.tools&#39;, name: &#39;gradle-jpi-plugin&#39;, version: &#39;0.3.3&#39;
}
}

apply plugin: &#39;jpi&#39;

dependencies {
groovy localGroovy()
}

groupId = &quot;org.jenkins-ci.plugins&quot;
version = &quot;0.0.1-SNAPSHOT&quot;    // Or whatever your version is.
description = &quot;A description of your plugin&quot;

jenkinsPlugin {
coreVersion = &#39;1.420&#39;                                               // Version of Jenkins core this plugin depends on.
    displayName = &#39;Plugin for Teambox integration&#39;                // Human-readable name of plugin.
    url = &#39;&#39;   // URL for plugin on Jenkins wiki or elsewhere.

    // The developers section is optional, and corresponds to the POM developers section.
    developers {
        developer {
            id &#39;heimojuh&#39;
                name &#39;Juha Heimonen&#39;
                email &#39;heimojuh@gmail.com&#39;
        }
    }                           

}
</code></pre></div>
<p>And after that I noticed: oh yeah, <b> mavenCentral() </b>. The upper excerpt is missing from many examples, and as basic as it may be, I at least have hard time remembering it. I wonder if it should be in https://raw.github.com/jenkinsci/gradle-jpi-plugin/master/install or are these easily embeddable to build script in parent? Well, beats me. At least this seems to work. And it&#39;s rather more pleasant than Maven and pom if you ask me. </p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello World]]></title>
    <link href="/blog/2012/03/24/hello-world/"/>
    <updated>2012-03-24T22:51:00+02:00</updated>
    <id>/blog/2012/03/24/hello-world</id>
    <content type="html"><![CDATA[<p>Hello World!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ill-Communicate]]></title>
    <link href="/blog/2012/03/14/ill-communicate/"/>
    <updated>2012-03-14T22:40:00+02:00</updated>
    <id>/blog/2012/03/14/ill-communicate</id>
    <content type="html"><![CDATA[<p><em>This is an opinion. The writer has years (it's not polite to ask age from a programmer) of experience in IT service industry, and has been among only failed sales efforts. And is afraid that they don't actually differ much from succeeding ones.</em></p>

<p>&nbsp;</p>

<p>What is a requirement? Or a feature request? Or a service request? What is a badly started blog-post? &nbsp; &nbsp;</p>

<p>&nbsp;</p>

<p>They're all an attempt to communicate something to someone. For starters I'd like to restrict the environment and domain to a very special one: IT service companies and their endeavors. I'd make a bold statement that most of such attempts will fail blatantly.&nbsp;</p>

<h1>a Contract</h1>

<p>A Contract is a rather tender piece of communication. A something you usually would not like to be misunderstood by either party, not if you're hiring a hit-man, or when you're contracting a medical equipment manufacturer. Contract, when negotiated, is usually deemed to be 'important'. It's something that 'must not fail' yet we feel no worry for letting supplier strut their stuff in black box. We might even feel odd should they propose some kind of continuous communication scenarios.</p>

<p>It's rather funny that even in big service companies the developers and educated project personnel have largely adopted the attitude that initial attempt to communicate on contract level will fail. In other words: negotiating and promising the large scope upfront will manifest itself to a hell-hound that bites your ass for the next three quarters.</p>

<p>Funnily enough, some of us want to correct the possible major fuck up with... more communication. But there's a catch: the continuous flow of communication (maybe iterative, maybe flow) gives us the possibility to learn the domain at hand with the provider and with the client.</p>

<h1>Hunam</h1>

<p>But who the fuck would initially confess that he/she is bad at communication? Not the persons buying, and especially not the person selling. Given the fact that there's usually a significant amount of money involved, personal money, in deal closings maybe in both sides, it would be disastrous to admit uncertainty.</p>

<p>Or at least, well, who cares, the errors will be corrected &nbsp;<strong>at some point later </strong>. It's more fun to sign 1M to 1Q, than 250K to Q1 and <strong>possibly</strong> 300K to 2Q, given that delivery doesn't fuck up. No matter the reputation lost after few years when the project will be publicly announced as <strong>failed</strong>.</p>

<p>Makes sense, no?</p>

<p>It does, because in service business, the value is not in deliverables (in most cases, I'd dare to say). It is in the work to be done. I'd say that this is the main reason some people doubt that "small companies could do government projects" for example.&nbsp;</p>

<p>A thought that is based on completely wrong value, given that it's the actual deliverable and its quality that matters shit to the buyer.</p>

<p>If I could draw, I'd draw an inflatable mountain here, imagine that.</p>

<p>The pact is perfected, if delivery on suppliers side is separate from the entity that did the sales. Everyone has a safety mechanism: customer who thinks he knows what he wants, seller who sold something he's not entirely sure but it got bought, and delivery who's wondering why they're required to manufacture a square to fit a round hole, but well, they were asked to.</p>

<p>It will soon become a three-some where everyone is feeling rather awkward, but is too afraid to say it because A) it would look stupid, B) There's no communication mechanics agreed with delivery and client (this may even be forbidden).</p>

<h1>F-word</h1>

<p>The one unit that does the act of communication better than any, is a gang of friends. Friendships are rarely formed in seconds, and one could argue that maintaining a friendship takes some effort. One "gain" of friendship is some kind of caring of one another, and this causes few things: we care about wellbeing of our friends and we become skillful in communicating with our friends</p>

<p>We rarely need any mechanics for communication among friends in effort to make ourselves understood, but it's a bit different when dealing in enterprise environment, where the exploitation of different systems starts from incentives, and well, it ends to incentives too.&nbsp;</p><p>These mechanics might be something called "business analysis", and in some project and development techniques they're mapped to certain roles, but I'd argue that it's not a single spot, nor a role that implements the mechanics that could actually work. Lately I was listening a speech by Chris Matts about feature injection and "exampling" and that certainly is one mechanic, not tied to a role of business analyst mind you.</p>

<p>It's equally important to have the communication tools and mechanics in place for the whole project. With my fresh experience from a project where something like such was agreed to be done, I'd say it's equally important to follow that the mechanics are honored.</p>

<p>Common to these mechanics is the fact, that they tend to admit that understanding something right the first time is rather an exception than a rule. In contract phase that is a tough spot to admit, thus these mechanics are easily left out just because we either cheat ourself, are afraid to look stupid or have a two way incentive deal. Two of the three things are human traits, one is the cancer in our industry.</p>

<p>Analyst and communication mechanics (throughout the project from customer to delivery to customer again) are there so that we can safely admit the inevitable, and have the freedom to learn together in order to become good communicators.</p>

<p>&nbsp;</p>

<p>It ain't no friendship, but at least all three of us can sleep in one bed cuddly together.</p>

<p>&nbsp;</p>
]]></content>
  </entry>
  
</feed>
